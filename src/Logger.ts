/**
 * Logger class ƒë·ªÉ t·∫°o ra c√°c console log c√≥ m√†u s·∫Øc v√† ƒë·ªãnh d·∫°ng ƒë·∫πp h∆°n.
 * S·ª≠ d·ª•ng m√£ m√†u ANSI ƒë·ªÉ ho·∫°t ƒë·ªông trong h·∫ßu h·∫øt c√°c terminal hi·ªán ƒë·∫°i.
 */
export class Logger {
    // M√£ m√†u ANSI
    private static readonly colors = {
        reset: "\x1b[0m",
        bright: "\x1b[1m",
        dim: "\x1b[2m",

        red: "\x1b[31m",
        green: "\x1b[32m",
        yellow: "\x1b[33m",
        blue: "\x1b[34m",
        magenta: "\x1b[35m",
        cyan: "\x1b[36m",
    };

    /**
     * Ghi log cho c√°c th√¥ng tin chung.
     * @param message - N·ªôi dung c·∫ßn log.
     */
    public static info(message: string): void {
        console.log(`${this.colors.cyan}[INFO] ${message}${this.colors.reset}`);
    }

    /**
     * Ghi log cho c√°c h√†nh ƒë·ªông th√†nh c√¥ng.
     * @param message - N·ªôi dung c·∫ßn log.
     */
    public static success(message: string): void {
        console.log(`${this.colors.green}[SUCCESS] ${message}${this.colors.reset}`);
    }

    /**
     * Ghi log cho c√°c c·∫£nh b√°o.
     * @param message - N·ªôi dung c·∫ßn log.
     */
    public static warn(message: string): void {
        console.log(`${this.colors.yellow}[WARN] ${message}${this.colors.reset}`);
    }

    /**
     * Ghi log cho c√°c l·ªói.
     * @param message - N·ªôi dung c·∫ßn log.
     */
    public static error(message: string, error?: any): void {
        console.error(`${this.colors.red}[ERROR] ${message}${this.colors.reset}`);
        if (error) {
            console.error(error);
        }
    }

    /**
     * Ghi log cho c√°c ho·∫°t ƒë·ªông ghi d·ªØ li·ªáu, nh∆∞ log tr·∫£ th∆∞·ªüng.
     * @param message - N·ªôi dung c·∫ßn log.
     */
    public static log(message: string): void {
        console.log(`${this.colors.magenta}üìù ${message}${this.colors.reset}`);
    }
}